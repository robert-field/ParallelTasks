#!/bin/sh

#
# This is from the GNU Parallel Tutorial, Copyright 2013-2020 Ole Tange,
# edited into a shell script.
#
# Consider it covered by the GNU Free Documentation License v1.3,
# as is the tutorial itself.
#
#
# Run this script to create the files needed for the GNU Parallel Tutorial
# at https://www.gnu.org/software/parallel/parallel_tutorial.html or
# locally copied.

#abc-file:
#   The file can be generated by this command:

      parallel -k echo ::: A B C > abc-file

#def-file:
#   The file can be generated by this command:

      parallel -k echo ::: D E F > def-file

#abc0-file:
#   The file can be generated by this command:

      perl -e 'printf "A\0B\0C\0"' > abc0-file

#abc_-file:
#   The file can be generated by this command:

      perl -e 'printf "A_B_C_"' > abc_-file

#tsv-file.tsv
#   The file can be generated by this command:

      perl -e 'printf "f1\tf2\nA\tB\nC\tD\n"' > tsv-file.tsv

#num8
#   The file can be generated by this command:

      perl -e 'for(1..8){print "$_\n"}' > num8

#num128
#    The file can be generated by this command:

      perl -e 'for(1..128){print "$_\n"}' > num128

#num30000
#   The file can be generated by this command:

      perl -e 'for(1..30000){print "$_\n"}' > num30000

#num1000000
#   The file can be generated by this command:

      perl -e 'for(1..1000000){print "$_\n"}' > num1000000

#num_%header
#   The file can be generated by this command:

      (echo %head1; echo %head2; \
       perl -e 'for(1..10){print "$_\n"}') > num_%header

#fixedlen
#   The file can be generated by this command:

      perl -e 'print "HHHHAAABBBCCC"' > fixedlen

#For remote running: ssh login on 2 servers with no password in $SERVER1 and $SERVER2 must work.
